[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dataporter"
version = "0.1.0"
description = "PyTorch data loading utilities for seamless training resumption and memory optimization"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Neil Tan", email = "your.email@example.com"},
]
maintainers = [
    {name = "Neil Tan", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["pytorch", "dataloader", "resumable", "machine learning", "deep learning", "data loading"]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.19.0",
    "typing-extensions>=4.0.0; python_version<'3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.0",
]
examples = [
    "transformers>=4.20.0",  # For HuggingFace integration examples
    "datasets>=2.0.0",        # For HuggingFace datasets examples
    "pillow>=9.0.0",         # For image processing examples
]

[project.urls]
Homepage = "https://github.com/yourusername/dataporter"
Documentation = "https://dataporter.readthedocs.io"
Repository = "https://github.com/yourusername/dataporter"
Issues = "https://github.com/yourusername/dataporter/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
dataporter = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=dataporter --cov-report=term-missing --cov-report=html"